#Docker 컨테이너를 정의하고 관리하기 위해 구성 파일
#여러 컨테이너와 한 곳에 정리 할 수 있게 해줌
#파일 버전
version: '3.8'

services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:latest
    container_name: teamf_db
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD= "${MYSQL_ROOT_PASSWORD}"  # MySQL 루트 비밀번호를 여기에 입력해야 합니다.
      - MYSQL_DATABASE=""  # 데이터베이스 이름을 여기에 입력해야 합니다.
      - MYSQL_USER=testuser # MySQL 사용자를 여기에 입력해야 합니다.
      - MYSQL_PASSWORD=1234 # MySQL 사용자의 비밀번호를 여기에 입력해야 합니다.
    volumes:
      - db_data:/var/lib/mysql  # MySQL 데이터베이스를 위한 가상 볼륨 설정
    networks:
      - app-network

  node:
    container_name: node
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: always
    environment:
      - TZ=Asia/Seoul
      - NODE_ENV=development
    ports:
      - '8000:8000'
    depends_on:
      - mysql
    command: npm start # 컨테이너가 시작될 때 실행할 명령
    develop:
      watch:
        - action: sync
          path: ./server
          target: server
          ignore:
            - node_modules/
        - action: rebuild
          path: ./server/package.json
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data: